"""
Django settings for project_1 project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(yv=8+n*d)q#q_z0lqjr8@_u)05c$2)wlf#@bjxaz5=+wjt^ta'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '192.168.43.160']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'storages',
    'phonenumber_field',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project_1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB'),
        'USER': os.getenv('POSTGRES_USER'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




# ১) প্রথমে বেসিক AWS/S3 কনফিগারেশন (MinIO ব্যবহার করলেও নাম AWS_ দিয়েই হবে):
AWS_ACCESS_KEY_ID = os.getenv('MINIO_ACCESS_KEY')
AWS_SECRET_ACCESS_KEY = os.getenv('MINIO_SECRET_KEY')

# ২) আপনার MinIO সার্ভারের URL এবং পোর্ট দিন:
AWS_S3_ENDPOINT_URL = os.getenv('MINIO_ENDPOINT')

# ৩) S3-কমপ্যাটিবল স্টোরেজে কোন রিজিওন ব্যবহার করবেন—MinIO-এ সাধারণত "us-east-1" বা কোনো কাস্টম সেটিংস, তবে MinIO-ডিফল্ট নিচে:
AWS_S3_REGION_NAME = os.getenv('MINIO_REGION')

# ৪) সিগনেচার ভার্সন (MinIO-এর জন্য সাধারণত 's3v4'):
AWS_S3_SIGNATURE_VERSION = 's3v4'

# ৫) ব্যাকেটের নাম, আগে MinIO UI/CLI-তে যে বাকেট বানিয়েছিলেন, ঐ নাম:
AWS_STORAGE_BUCKET_NAME = os.getenv('MINIO_BUCKET_NAME')
AWS_MEDIA_BUCKET_NAME = os.getenv('MINIO_MEDIA_BUCKET_NAME')

# ৬) স্ট্যাটিক ফাইল যেখানে আপলোড হবে:
AWS_LOCATION = ''   # আপনি কাঙ্ক্ষিত পাথ-এ করতে পারেন, যেমন 'static' বা 'assets/static'

# ৭) (বিকল্প) মিডিয়া ফাইল রাখতে আরেকটি পাথ দিতে চাইলে:
# AWS_MEDIA_LOCATION = 'media'

# --------------------------------
#  স্ট্যাটিক ফাইলের জন্য Storage Class:
# --------------------------------
# Django-storages এর S3StaticStorage ব্যবহার করে স্ট্যাটিক ফাইল হ্যান্ডেল হবে
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'

# --------------------------------
#  মিডিয়া ফাইলের জন্য Storage Class:
# --------------------------------
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
    },
    "staticfiles": {
        "BACKEND": "storages.backends.s3boto3.S3StaticStorage",
    },
}

# --------------------------------
#  STATIC_URL ও MEDIA_URL কনফিগার:
# --------------------------------
# MinIO থেকে ব্রাউজার-এ স্ট্যাটিক/মিডিয়া পড়ানোর জন্য URL
STATIC_URL = f"{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/"
MEDIA_URL = f"{AWS_S3_ENDPOINT_URL}/{AWS_MEDIA_BUCKET_NAME}/post_images/"

# --------------------------------
#  (Optional) অতিরিক্ত পলিসি/পারফরম্যান্স টুইক:
# --------------------------------
# স্ট্যাটিক ফাইল ক্যাশ-ফ্রেন্ডলি সার্ভ করাতে:
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',  # 24 ঘন্টা ক্যাশ
}

# মিডিয়া ফাইল পাবলিক/প্রাইভেট করতে চাইলে:
# AWS_DEFAULT_ACL = 'public-read'  # অথবা 'private'
# AWS_S3_FILE_OVERWRITE = False    # একই নামের ফাইল ওভাররাইট করলে পুরনো ফাইল চলে যাবে; False দিলে ভিন্ন কী গুলো আলাদা আছে

# --------------------------------
#  DEBUG=False সেট করার পর, ALLOWED_HOSTS ঠিকঠাক দিন:
# --------------------------------
# --------------------------------
#  অন্য যেসব সেটিংস আছে, যেমন DATABASES, MIDDLEWARE, TEMPLATES এগুলো আগের মতোই থাকবে।
# --------------------------------

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}
# Celery Config
CELERY_BROKER_URL = 'redis://127.0.0.1:6379/2'
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/3'

# Sessions via Redis
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# Session 1 দিনের জন্য এক্সপায়ার হবে (১ দিন = 86400 সেকেন্ড)
SESSION_COOKIE_AGE = 86400  

# প্রতি রিকোয়েস্টে session যদি চেঞ্জ হয়, তখন নতুন করে TTL আপডেট করবে
SESSION_SAVE_EVERY_REQUEST = True